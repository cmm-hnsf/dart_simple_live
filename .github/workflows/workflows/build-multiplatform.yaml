name: Build Multi-Platform Apps

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.22.0'

jobs:
  # Android 构建
  build-android:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
    
    - name: Install dependencies (simple_live_app)
      working-directory: simple_live_app
      run: flutter pub get
    
    - name: Install dependencies (simple_live_tv_app)
      working-directory: simple_live_tv_app
      run: flutter pub get
    
    - name: Install dependencies (simple_live_core)
      working-directory: simple_live_core
      run: flutter pub get
    
    - name: Build Android APK (simple_live_app)
      working-directory: simple_live_app
      run: flutter build apk --release --split-per-abi
    
    - name: Build Android App Bundle (simple_live_app)
      working-directory: simple_live_app
      run: flutter build appbundle --release
    
    - name: Build Android APK (simple_live_tv_app)
      working-directory: simple_live_tv_app
      run: flutter build apk --release --split-per-abi
    
    - name: Upload Android artifacts
      uses: actions/upload-artifact@v4
      with:
        name: android-builds
        path: |
          simple_live_app/build/app/outputs/flutter-apk/*.apk
          simple_live_app/build/app/outputs/bundle/release/*.aab
          simple_live_tv_app/build/app/outputs/flutter-apk/*.apk

  # iOS 构建
  build-ios:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
    
    - name: Install dependencies (simple_live_app)
      working-directory: simple_live_app
      run: flutter pub get
    
    - name: Install dependencies (simple_live_core)
      working-directory: simple_live_core
      run: flutter pub get
    
    - name: Build iOS (no-codesign)
      working-directory: simple_live_app
      run: flutter build ios --release --no-codesign
    
    - name: Create iOS IPA
      working-directory: simple_live_app
      run: |
        mkdir -p build/ios/iphoneos/Payload
        cp -r build/ios/iphoneos/Runner.app build/ios/iphoneos/Payload/
        cd build/ios/iphoneos
        zip -r simple_live_app.ipa Payload/
    
    - name: Upload iOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ios-builds
        path: simple_live_app/build/ios/iphoneos/simple_live_app.ipa

  # Windows 桌面构建
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
    
    - name: Install dependencies (simple_live_app)
      working-directory: simple_live_app
      run: flutter pub get
    
    - name: Install dependencies (simple_live_core)
      working-directory: simple_live_core
      run: flutter pub get
    
    - name: Enable Windows desktop
      working-directory: simple_live_app
      run: flutter config --enable-windows-desktop
    
    - name: Build Windows
      working-directory: simple_live_app
      run: flutter build windows --release
    
    - name: Create Windows ZIP
      working-directory: simple_live_app
      run: |
        Compress-Archive -Path "build\windows\x64\runner\Release\*" -DestinationPath "build\windows\simple_live_app_windows.zip"
    
    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-builds
        path: simple_live_app/build/windows/simple_live_app_windows.zip

  # macOS 桌面构建
  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
    
    - name: Install dependencies (simple_live_app)
      working-directory: simple_live_app
      run: flutter pub get
    
    - name: Install dependencies (simple_live_core)
      working-directory: simple_live_core
      run: flutter pub get
    
    - name: Enable macOS desktop
      working-directory: simple_live_app
      run: flutter config --enable-macos-desktop
    
    - name: Build macOS
      working-directory: simple_live_app
      run: flutter build macos --release
    
    - name: Create macOS DMG
      working-directory: simple_live_app
      run: |
        brew install create-dmg
        create-dmg \
          --volname "Simple Live" \
          --window-pos 200 120 \
          --window-size 600 300 \
          --icon-size 100 \
          --icon "simple_live_app.app" 175 120 \
          --hide-extension "simple_live_app.app" \
          --app-drop-link 425 120 \
          "build/macos/Build/Products/Release/simple_live_app.dmg" \
          "build/macos/Build/Products/Release/"
    
    - name: Upload macOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-builds
        path: simple_live_app/build/macos/Build/Products/Release/simple_live_app.dmg

  # Linux 桌面构建
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Linux dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y ninja-build libgtk-3-dev
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
    
    - name: Install dependencies (simple_live_app)
      working-directory: simple_live_app
      run: flutter pub get
    
    - name: Install dependencies (simple_live_core)
      working-directory: simple_live_core
      run: flutter pub get
    
    - name: Enable Linux desktop
      working-directory: simple_live_app
      run: flutter config --enable-linux-desktop
    
    - name: Build Linux
      working-directory: simple_live_app
      run: flutter build linux --release
    
    - name: Create Linux AppImage
      working-directory: simple_live_app
      run: |
        # 创建 AppDir 结构
        mkdir -p AppDir/usr/bin
        mkdir -p AppDir/usr/share/applications
        mkdir -p AppDir/usr/share/icons/hicolor/256x256/apps
        
        # 复制构建文件
        cp -r build/linux/x64/release/bundle/* AppDir/usr/bin/
        
        # 创建 .desktop 文件
        cat > AppDir/usr/share/applications/simple_live_app.desktop << EOF
        [Desktop Entry]
        Name=Simple Live
        Exec=simple_live_app
        Icon=simple_live_app
        Type=Application
        Categories=AudioVideo;
        EOF
        
        # 下载 appimagetool
        wget -O appimagetool "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage"
        chmod +x appimagetool
        
        # 创建 AppImage
        ./appimagetool AppDir simple_live_app.AppImage
    
    - name: Upload Linux artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-builds
        path: simple_live_app/simple_live_app.AppImage

  # Web 构建
  build-web:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
    
    - name: Install dependencies (simple_live_app)
      working-directory: simple_live_app
      run: flutter pub get
    
    - name: Install dependencies (simple_live_core)
      working-directory: simple_live_core
      run: flutter pub get
    
    - name: Build Web
      working-directory: simple_live_app
      run: flutter build web --release --web-renderer html
    
    - name: Create Web archive
      working-directory: simple_live_app
      run: tar -czf build/web/simple_live_app_web.tar.gz -C build/web .
    
    - name: Upload Web artifacts
      uses: actions/upload-artifact@v4
      with:
        name: web-builds
        path: simple_live_app/build/web/simple_live_app_web.tar.gz

  # 创建 Release（仅在 tag 推送时）
  create-release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build-android, build-ios, build-windows, build-macos, build-linux, build-web]
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          android-builds/*
          ios-builds/*
          windows-builds/*
          macos-builds/*
          linux-builds/*
          web-builds/*
        body: |
          ## 📱 支持平台
          
          - **Android**: APK 和 AAB 文件（包含普通版和 TV 版）
          - **iOS**: IPA 文件（需要重新签名）
          - **Windows**: ZIP 压缩包
          - **macOS**: DMG 安装包
          - **Linux**: AppImage 可执行文件
          - **Web**: 网页版本
          
          ## 🚀 安装说明
          
          ### Android
          - 下载对应架构的 APK 文件直接安装
          - TV 版本适用于 Android TV 设备
          
          ### iOS
          - 需要使用 Xcode 或第三方工具重新签名
          
          ### Windows
          - 解压 ZIP 文件，运行 simple_live_app.exe
          
          ### macOS
          - 双击 DMG 文件安装
          
          ### Linux
          - 下载 AppImage 文件，添加执行权限后直接运行
          
          ### Web
          - 解压 tar.gz 文件，部署到 Web 服务器
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
